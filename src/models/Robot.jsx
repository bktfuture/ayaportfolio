import React, { useEffect, useRef } from 'react';
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useFrame, useThree } from '@react-three/fiber';

import { a } from '@react-spring/three';
import robotScene from '../assets/3d/robot.glb';
import { useGLTF } from '@react-three/drei';

const Robot = ({ isRotating, setIsRotating, ...props }) => {
	const robotRef = useRef();
	const { gl, viewport } = useThree();

	//mouse position
	const lastX = useRef(0);
	const rotationSpeed = useRef(0);

	const dampingFactor = 0.95;

	const handlePointerDown = (e) => {
		e.stopProgation();
		e.preventDefault();
		setIsRotating(true);

		const clientX = e.touches ? e.touches[0].clientX : e.clientX;
		lastX.current = clientX;
	};
	const handlePointerUp = (e) => {
		e.stopProgation();
		e.preventDefault();
		setIsRotating(false);

		const clientX = e.touches ? e.touches[0].clientX : e.clientX;
	};

	const handlePointerMove = (e) => {
		e.stopProgation();
		e.preventDefault();
	};

	const { nodes, materials } = useGLTF(robotScene);
	return (
		<a.group ref={robotRef} {...props}>
			<mesh
				// castShadow
				// receiveShadow
				geometry={nodes.Cube.geometry}
				material={materials.Material}
				position={[0, 1.382, 0]}
				rotation={[Math.PI, -0.547, Math.PI]}
				scale={[1.264, 0.902, 0.902]}
			>
				<mesh
					geometry={nodes.cat_insde.geometry}
					material={materials.Material}
					position={[-0.424, 1.369, 0.201]}
					rotation={[0.005, -0.125, 0.307]}
					scale={[0.186, 0.217, 0.172]}
				/>
				<group position={[-1.137, -0.201, -0.088]} rotation={[0, 0, -Math.PI / 2]} scale={[0.898, 0.715, 0.898]}>
					<mesh geometry={nodes.Circle_1.geometry} material={materials.Material} />
					<mesh geometry={nodes.Circle_2.geometry} material={materials['Material.001']} />
					<mesh geometry={nodes.Circle_3.geometry} material={materials['Material.002']} />
				</group>
				<mesh
					geometry={nodes.Cone.geometry}
					material={materials.Material}
					position={[-0.424, 1.369, 0.201]}
					rotation={[0.005, -0.125, 0.307]}
					scale={[0.226, 0.225, 0.213]}
				/>
				<mesh geometry={nodes.Cube002.geometry} material={materials.Material} />
				<mesh geometry={nodes.Cube001_1.geometry} material={materials['Material.003']} />
				<mesh geometry={nodes.Cube001_2.geometry} material={materials['Material.004']} />
			</mesh>
		</a.group>
	);
};

export default Robot;
